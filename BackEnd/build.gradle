plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'

    implementation 'net.minidev:json-smart:2.4.7'

    // firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'

    // Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    implementation 'com.auth0:java-jwt:4.2.1'

    // s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // query dsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // spring boot batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // postgresSql
    implementation 'org.postgresql:postgresql:42.6.0'
    // hibernate-spatial 및 jts 라이브러리
    implementation 'org.hibernate:hibernate-spatial:6.2.13.Final'
    implementation 'org.locationtech.jts:jts-core'

    // firebase 설정
//    implementation 'com.google.firebase:firebase-admin'

    // batch 설정
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'

    // batch scheduler를 위한 설정
    implementation 'org.quartz-scheduler:quartz'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'


}

tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated')
}